{"version":3,"sources":["services/authService.js","components/Login.js","components/Register.js","services/authHeader.js","services/userService.js","components/Home.js","components/Profile.js","components/BoardUser.js","components/BoardAdmin.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","username","password","axios","post","then","res","data","accessToken","localStorage","setItem","JSON","stringify","window","removeItem","email","parse","getItem","required","value","class","role","Login","props","form","useRef","checkBtn","useState","setUsername","setPassword","loading","setLoading","message","setMessage","src","alt","className","onSubmit","e","preventDefault","current","validateAll","context","_errors","length","AuthService","history","push","location","reload","error","resMessage","response","toString","ref","htmlFor","type","name","onChange","target","validations","disabled","style","display","validEmail","isEmail","validUsername","validPassword","Register","setEmail","successful","setSuccessful","authHeader","user","get","headers","Home","content","setContent","useEffect","UserService","_content","Profile","currentUser","substring","substr","id","roles","map","index","BoardUser","BoardAdmin","App","showAdminBoard","setShowAdminBoard","undefined","setCurrentUser","includes","to","href","onClick","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.30b46cf9.chunk.js","sourcesContent":["/* Authentication service, uses Axios for \n   HTTP requests and Local Storage for user\n   information & JWT.\n*/\n\nimport axios from 'axios';\n\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nconst register = (username, email, password) => {\n\treturn axios.post(API_URL + \"signup\", {\n\t\tusername,\n\t\temail,\n\t\tpassword,\n\t});\n}\n\nconst login = (username, password) => {\n\treturn axios.post(API_URL + \"login\", {\n\t    username, \n\t \tpassword,\n\t})\n\t.then((res) => {\n\t\tif(res.data.accessToken) {\n\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(res.data));\n\t\t}\n\n\t\treturn res.data;\n\t});\n}\n\nconst logout = () => {\n\t// window.localStorage.clear(); \n\twindow.localStorage.removeItem(\"user\");\n\t// this.props.history.push(\"/\");\n}\n\nconst getCurrentUser = () => {\n\treturn JSON.parse(localStorage.getItem(\"user\"));\n}\n\nexport default {\n\tlogin,\n\tlogout,\n\tregister,\n\tgetCurrentUser,\n}","import React, { useState, useRef } from 'react';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport CheckButton from 'react-validation/build/button';\n\nimport AuthService from '../services/authService';\n\nconst required = (value) => {\n\tif(!value) {\n\t\treturn (\n\t\t\t<div class=\"alert alert-danger\" role=\"alert\">\n\t\t\t\tThis field is required!\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst Login = (props) => {\n\tconst form = useRef();\n\tconst checkBtn = useRef();\n\n\tconst [username, setUsername] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [loading, setLoading] = useState(false);\n\tconst [message, setMessage] = useState(\"\");\n\n\tconst onChangeUsername = (e) => {\n\t\tconst username = e.target.value;\n\t\tsetUsername(username);\n\t}\n\n\tconst onChangePassword = (e) => {\n\t\tconst password = e.target.value;\n\t\tsetPassword(password);\n\t}\n\n\tconst handleLogin = (e) => {\n\t\te.preventDefault();\n\n\t\tsetMessage(\"\");\n\t\tsetLoading(true);\n\n\t\tform.current.validateAll();\n\n\t\tif(checkBtn.current.context._errors.length === 0) {\n\t\t\tAuthService.login(username, password)\n\t\t\t\t.then(() => {\n\t\t\t\t\tprops.history.push(\"/profile\");\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t}, (error) => {\n\t\t\t\t\tconst resMessage = (error.response && error.response.data && error.response.data.message) || error.message || error.toString();\n\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t\tsetMessage(resMessage);\n\t\t\t\t});\n\t\t} else {\n\t\t\tsetLoading(false);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div class=\"col-md-12\">\n\t\t\t<div class=\"card card-container\">\n\t\t\t\t<img\n          \t\t\tsrc=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          \t\t\talt=\"profile-img\" className=\"profile-img-card\"\n        \t\t/>\n\n        \t\t<Form onSubmit={handleLogin} ref={form}>\n        \t\t\t<div class=\"form-group\">\n        \t\t\t\t<label htmlFor=\"username\">Username</label>\n        \t\t\t\t<Input\n        \t\t\t\t\ttype=\"text\" class=\"form-control\"\n        \t\t\t\t\tname=\"username\" value={username}\n        \t\t\t\t\tonChange={onChangeUsername}\n        \t\t\t\t\tvalidations={[required]}\n        \t\t\t\t/>\n        \t\t\t</div>\n\n        \t\t\t<div class=\"form-group\">\n        \t\t\t\t<label htmlFor=\"password\">Password</label>\n        \t\t\t\t<Input\n        \t\t\t\t\ttype=\"password\" class=\"form-control\"\n        \t\t\t\t\tname=\"password\" value={password}\n        \t\t\t\t\tonChange={onChangePassword}\n        \t\t\t\t\tvalidations={[required]}\n        \t\t\t\t/>\n        \t\t\t</div>\n\n        \t\t\t<div class=\"form-group\">\n        \t\t\t\t<button class=\"btn btn-primary btn-block\" disabled={loading}>\n        \t\t\t\t\t{loading && (\n        \t\t\t\t\t\t<span class=\"spinner-border spinner-border-sm\"></span>\n        \t\t\t\t\t)}\n        \t\t\t\t\t<span>Login</span>\n        \t\t\t\t</button>\n        \t\t\t</div>\n\n        \t\t\t{message && (\n        \t\t\t\t<div class=\"form-group\">\n        \t\t\t\t\t<div class=\"alert alert-danger\" role=\"alert\">\n        \t\t\t\t\t\t{message}\n        \t\t\t\t\t</div>\n        \t\t\t\t</div>\n        \t\t\t)}\n        \t\t\t<CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        \t\t</Form>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Login;","import React, { useState, useRef } from 'react';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport CheckButton from 'react-validation/build/button';\nimport { isEmail } from 'validator'; // to verify email\n\nimport AuthService from '../services/authService';\n\nconst required = (value) => {\n\tif(!value) {\n\t\treturn (\n\t\t\t<div class=\"alert alert-danger\" role=\"alert\">\n\t\t\t\tThis field is required!\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst validEmail = (value) => {\n\tif(!isEmail(value)) {\n\t\treturn(\n\t\t\t<div class=\"alert alert-danger\" role=\"alert\">\n\t\t\t\tThis is not a valid email!\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst validUsername = (value) => {\n\tif (value.length < 3 || value.length > 20) {\n\t\treturn(\n\t\t\t<div class=\"alert alert-danger\" role=\"alert\">\n\t\t\t\tUsername must be between 3 and 20 characters!\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst validPassword = (value) => {\n\tif (value.length < 6 || value.length > 30) {\n\t\treturn(\n\t\t\t<div class=\"alert alert-danger\" role=\"alert\">\n\t\t\t\tPassword must be between 6 and 30 characters!\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst Register = (props) => {\n\tconst form = useRef();\n\tconst checkBtn = useRef();\n\n\tconst [username, setUsername] = useState(\"\");\n\tconst [email, setEmail] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [successful, setSuccessful] = useState(false);\n\tconst [message, setMessage] = useState(\"\");\n\n\tconst onChangeUsername = (e) => {\n\t\tconst username = e.target.value;\n\t\tsetUsername(username);\n\t}\n\n\tconst onChangeEmail = (e) => {\n\t\tconst email = e.target.value;\n\t\tsetEmail(email);\n\t}\n\n\tconst onChangePassword = (e) => {\n\t\tconst password = e.target.value;\n\t\tsetPassword(password);\n\t}\n\n\tconst handleRegister = (e) => {\n\t\te.preventDefault();\n\n\t\tsetMessage(\"\");\n\t\tsetSuccessful(false);\n\n\t\tform.current.validateAll();\n\n\t\tif (checkBtn.current.context._errors.length === 0) {\n\t\t\tAuthService.register(username, email, password)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tsetMessage(res.data.message);\n\t\t\t\t\tsetSuccessful(true);\n\t\t\t\t}, (error) => {\n\t\t\t\t\tconst resMessage = (error.response && error.response.data && error.response.data.message) || error.message || error.toString();\n\t\t\t\t\t\n\t\t\t\t\tsetMessage(resMessage);\n\t\t\t\t\tsetSuccessful(false);\n\t\t\t\t});\n\t\t}\n\t}\n\n\treturn(\n\t\t<div class=\"col-md-12\">\n\t\t\t<div class=\"card card-container\">\n\t\t\t\t<img src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          \t\t\t alt=\"profile-img\" className=\"profile-img-card\" />\n\n          \t\t<Form onSubmit={handleRegister} ref={form}>\n          \t\t\t{!successful && (\n          \t\t\t\t<div>\n          \t\t\t\t\t<div class=\"form-group\">\n          \t\t\t\t\t\t<label htmlFor=\"username\">Username</label>\n          \t\t\t\t\t\t<Input \n          \t\t\t\t\t\t\ttype=\"text\" class=\"form-control\"\n          \t\t\t\t\t\t\tname=\"username\" value={username}\n          \t\t\t\t\t\t    onChange={onChangeUsername}\n          \t\t\t\t\t\t    validations={[required, validUsername]}\n          \t\t\t\t\t\t/>\n          \t\t\t\t\t</div>\n\n          \t\t\t\t\t<div class=\"form-group\">\n          \t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\n          \t\t\t\t\t\t<Input\n          \t\t\t\t\t\t\ttype=\"text\" class=\"form-control\"\n          \t\t\t\t\t\t\tname=\"email\" value={email}\n          \t\t\t\t\t\t\tonChange={onChangeEmail}\n          \t\t\t\t\t\t\tvalidations={[required, validEmail]}\n          \t\t\t\t\t\t/>\n          \t\t\t\t\t</div>\n\n          \t\t\t\t\t<div class=\"form-group\">\n          \t\t\t\t\t\t<label htmlFor=\"password\">Password</label>\n          \t\t\t\t\t\t<Input\n          \t\t\t\t\t\t\ttype=\"password\" class=\"form-control\"\n          \t\t\t\t\t\t\tname=\"password\" value={password}\n          \t\t\t\t\t\t\tonChange={onChangePassword}\n          \t\t\t\t\t\t\tvalidations={[required, validPassword]}\n          \t\t\t\t\t\t/>\n          \t\t\t\t\t</div>\n\n          \t\t\t\t\t<div class=\"form-group\">\n          \t\t\t\t\t\t<button class=\"btn btn-primary btn-block\">Sign Up</button>\n          \t\t\t\t\t</div>\n          \t\t\t\t</div>\n          \t\t\t)}\n\n          \t\t\t{message && (\n          \t\t\t\t<div class=\"from-group\">\n          \t\t\t\t\t<div class={successful ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\">\n          \t\t\t\t\t\t{message}\n          \t\t\t\t\t</div>\n          \t\t\t\t</div>\n          \t\t\t)}\n          \t\t\t<CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n          \t\t</Form>\n\t\t\t</div>\n\t\t</div>\n\t)\n\n}\n\nexport default Register;","/* access protected resources, the HTTP request \n   needs Authorization header. \n*/\n\nexport default function authHeader() {\n\tconst user = JSON.parse(localStorage.getItem(\"user\"));\n\n\tif(user && user.accessToken) {\n\t\treturn {\n\t\t\t'x-access-token': user.accessToken // for Node.js Express back-end\n\t\t};\n\t} else {\n\t\treturn {};\n\t}\n}\n","/* requesting authorized resource */\n\nimport axios from 'axios';\nimport authHeader from './authHeader';\n\nconst API_URL = \"http://localhost:8080/api/test/\";\n\nconst getPublicContent = () => {\n\treturn axios.get(API_URL + \"all\");\n}\n\nconst getUserBoard = () => {\n\treturn axios.get(API_URL + \"user\", { headers: authHeader() });\n}\n\nconst getAdminBoard = () => {\n\treturn axios.get(API_URL + \"admin\", { headers: authHeader() });\n}\n \n\nexport default {\n\tgetPublicContent,\n\tgetUserBoard,\n\tgetAdminBoard,\n}","import React, { useState, useEffect } from 'react';\nimport UserService from '../services/userService';\n\nconst Home = () => {\n\tconst [content, setContent] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tUserService.getPublicContent()\n\t\t\t.then((response) => {\n\t\t\t\tsetContent(response.data);\n\t\t\t}, (error) => {\n\t\t\t\tconst _content = (error.response && error.response.data) || error.message || error.toString();\n\n\t\t\t\tsetContent(_content);\n\t\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div class=\"container\">\n\t\t\t<header class=\"jumbotron\">\n\t\t\t\t<h3>{content}</h3>\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default Home;","import React from 'react'; \nimport AuthService from '../services/authService';\n\nconst Profile = () => {\n\tconst currentUser = AuthService.getCurrentUser();\n\n\treturn(\n\t\t<div class=\"container\">\n\t\t\t<header class=\"jumbotron\">\n\t\t\t\t<h3>\n\t\t\t\t\t<strong>{currentUser.username}</strong> Profile\n\t\t\t\t</h3>\n\t\t\t</header>\n\n\t\t\t<p>\n\t\t\t\t<strong>Token: </strong> {currentUser.accessToken.substring(0, 20)} ... {\" \"}\n\t\t\t\t{currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\t<strong>ID: </strong> {currentUser.id}\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\t<strong>Email: </strong> {currentUser.email}\n\t\t\t</p>\n\n\t\t\t<strong>Authorities: </strong>\n\t\t\t<ul>\n\t\t\t\t{currentUser.roles && currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n\t\t\t</ul>\n\t\t</div>\n\n\t);\n}\n\nexport default Profile;","import React, { useState, useEffect } from 'react';\nimport UserService from '../services/userService';\n\nconst BoardUser = () => {\n\tconst [content, setContent] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tUserService.getUserBoard()\n\t\t\t.then((response) => {\n\t\t\t\tsetContent(response.data);\n\t\t\t}, (error) => {\n\t\t\t\tconst _content = (error.response && error.response.data && error.response.data.message) || error.message || error.toString();\n\n\t\t\t\tsetContent(_content);\n\t\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div class=\"container\">\n\t\t\t<header class=\"jumbotron\">\n\t\t\t\t<h3>{content}</h3>\n\t\t\t</header>\n\t\t</div>\n\t)\n}\n\nexport default BoardUser;","import React, { useState, useEffect } from 'react';\nimport UserService from '../services/userService';\n\nconst BoardAdmin = () => {\n\tconst [content, setContent] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tUserService.getAdminBoard()\n\t\t\t.then((response) => {\n\t\t\t\tsetContent(response.data);\n\t\t\t}, (error) => {\n\t\t\t\tconst _content = (error.response && error.response.data && error.response.data.message) || error.message || error.toString();\n\n\t\t\t\tsetContent(_content);\n\t\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div class=\"container\">\n\t\t\t<header class=\"jumbotron\">\n\t\t\t\t<h3>{content}</h3>\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default BoardAdmin;","import React, { useState, useEffect } from 'react';\nimport { Link, Switch, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport AuthService from './services/authService';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Home from './components/Home';\nimport Profile from './components/Profile';\nimport BoardUser from './components/BoardUser';\nimport BoardAdmin from './components/BoardAdmin';\n\nconst App = () => {\n\tconst [showAdminBoard, setShowAdminBoard] = useState(false);\n\tconst [currentUser, setCurrentUser] = useState(undefined);\n    \n    useEffect(() => {\n    \tconst user = AuthService.getCurrentUser();\n\n    \tif (user) {\n    \t\tsetCurrentUser(user);\n    \t\tsetShowAdminBoard(user.roles.includes(\"ROLE_ADMIN\"));\n    \t}\n    }, []);\n\n    const logOut = () => {\n    \tAuthService.logout();\n    }\n\n\treturn (\n        <div>\n           \t<nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n           \t\t<Link to={\"/\"} class=\"navbar-brand\">React</Link>\n\n           \t\t<div class=\"navbar-nav mr-auto\">\n           \t\t\t<li class=\"nav-item\">\n           \t\t\t\t<Link to={\"/home\"} class=\"nav-link\">Home</Link>\n           \t\t\t</li>\n\n           \t\t\t{showAdminBoard && (\n           \t\t\t\t<li class=\"nav-item\">\n           \t\t\t\t\t<Link to={\"/admin\"} class=\"nav-link\">Admin Board</Link>\n           \t\t\t\t</li>\n           \t\t\t)}\n\n           \t\t\t{currentUser && (\n           \t\t\t\t<li class=\"nav-item\">\n           \t\t\t\t\t<Link to={\"/user\"} class=\"nav-link\">User</Link>\n           \t\t\t\t</li>\n           \t\t\t)}\n           \t\t</div>\n\n           \t\t{currentUser ? (\n           \t\t\t<div class=\"navbar-nav ml-auto\">\n           \t\t\t\t<li class=\"nav-item\">\n           \t\t\t\t\t<Link to={\"/profile\"} class=\"nav-link\">{currentUser.username}</Link>\n           \t\t\t\t</li>\n           \t\t\t\t<li class=\"nav-item\">\n           \t\t\t\t\t<a href=\"/\" class=\"nav-link\" onClick={logOut}>Logout</a>\n           \t\t\t\t</li>\n           \t\t\t</div>\n           \t\t) : (\n           \t\t\t<div class=\"navbar-nav ml-auto\">\n           \t\t\t\t<li class=\"nav-item\">\n           \t\t\t\t\t<Link to={\"/login\"} class=\"nav-link\">Login</Link>\n           \t\t\t\t</li>\n           \t\t\t\t<li class=\"nav-item\">\n           \t\t\t\t\t<Link to={\"/register\"} class=\"nav-link\">Sign Up</Link>\n           \t\t\t\t</li>\n           \t\t\t</div>\n           \t\t)} \n           \t</nav>\n\n           \t<div class=\"container mt-3\">\n           \t\t<Switch>\n           \t\t\t<Route exact path={[\"/\", \"/home\"]} component={Home} />\n           \t\t\t<Route exact path=\"/login\" component={Login} />\n           \t\t\t<Route exact path=\"/register\" component={Register} />\n           \t\t\t<Route exact path=\"/profile\" component={Profile} />\n           \t\t\t<Route path=\"/user\" component={BoardUser} />\n           \t\t\t<Route path=\"/admin\" component={BoardAdmin} />\n           \t\t</Switch>\n           \t</div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App'; \n\nimport { HashRouter } from 'react-router-dom'; // BrowserRouter: refresh, return 404\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n \nserviceWorker.unregister();"],"sourceRoot":""}